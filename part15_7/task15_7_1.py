# Описание проекта: программа загадывает слово, а пользователь должен его угадать. Изначально все буквы слова
# неизвестны. Также рисуется виселица с петлей. Пользователь предлагает букву, которая может входить в это слово.
# Если такая буква есть в слове, то программа ставит букву столько раз, сколько она встречается в слове.
# Если такой буквы нет, к виселице добавляется круг в петле, изображающий голову. Пользователь продолжает
# отгадывать буквы до тех пор, пока не отгадает всё слово. За каждую неудачную попытку добавляется еще одна
# часть туловища висельника (обычно их 6: голова, туловище, 2 руки и 2 ноги).
# Составляющие проекта:
# Целые числа (тип int);
# Переменные;
# Ввод / вывод данных (функции input() и print());
# Условный оператор (if/elif/else);
# Цикл while;
# Бесконечный цикл;
# Операторы break, continue;
# Создание пользовательских функций;
# Списочные выражения;
# Работа с модулем random для генерации случайных чисел.

# Подключите модуль random;
# Создайте глобальный список word_list, содержащий слова, которые будут использоваться в игре.

import random
word_list = ['Python', 'Javascript', 'Git']

# Напишите функцию get_word() которая возвращает случайное слово из списка word_list в верхнем регистре.

def get_word():
    return random.choice(word_list).upper()

# Функция display_hangman() принимает один аргумент tries – количество попыток угадывания слова – и возвращает текущее
# состояние игры в графическом виде:
# значение tries = 6 соответствует начальному положению, пустая виселица;
# значение tries = 0 соответствует конечному положению, то есть проигрышу и полностью нарисованному телу повешенного.
# функция получения текущего состояния

def display_hangman(tries):
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
            '''
               --------
               |      |
               |      O
               |     \\|/
               |      |
               |     / \\
               -
            ''',
            # голова, торс, обе руки, одна нога
            '''
               --------
               |      |
               |      O
               |     \\|/
               |      |
               |     / 
               -
            ''',
            # голова, торс, обе руки
            '''
               --------
               |      |
               |      O
               |     \\|/
               |      |
               |      
               -
            ''',
            # голова, торс и одна рука
            '''
               --------
               |      |
               |      O
               |     \\|
               |      |
               |     
               -
            ''',
            # голова и торс
            '''
               --------
               |      |
               |      O
               |      |
               |      |
               |     
               -
            ''',
            # голова
            '''
               --------
               |      |
               |      O
               |    
               |      
               |     
               -
            ''',
            # начальное состояние
            '''
               --------
               |      |
               |      
               |    
               |      
               |     
               -
            '''
        ]
    return stages[tries]

# Напишите функцию play(), в которой будет осуществляться основная логика игры. Функция play() принимает в качестве
# аргумента слово word, сгенерированное функцией  get_word().

def play(word):
    word_completion = '_' * len(word)  # строка, содержащая символы _ на каждую букву задуманного слова
    guessed = False  # сигнальная метка
    guessed_letters = []  # список уже названных букв
    guessed_words = []  # список уже названных слов
    tries = 6  # количество попыток

    print('Давай зіграємо в угадування слів!')
    print(display_hangman(tries))
    print(word_completion)
    print()
# Функция play() в самом начале должна:
# отобразить текст 'Давайте играть в угадайку слов!';
# отобразить текущее состояние игры, распечатав результат вызова функции display_hangman() с начальным количеством
# допустимых промахов tries = 6;
# отобразить начальное слово word_completion в виде строки с символом _ на каждую букву задуманного слова;
# Необходимо обрабатывать ввод букв или слова целиком. Предусмотрите защиту от дурака, на случай если пользователь
# ввел символ, не являющийся буквой;
# Если пользователь вводит уже названную букву или слово, то необходимо ему об этом сообщить, и не засчитывать попытку;
# Если пользователь угадал букву, то требуется заменить все символы _ соответствующие этой букве;
# Если пользователь угадал слово целиком, то следует его поздравить и вывести текст 'Поздравляем, вы угадали слово!
# Вы победили!';
# Если пользователь исчерпал все свои попытки и не угадал слово, следует вывести загаданное слово.
# Примечание. Переводите все символы в верхний регистр.
# Организуйте цикл, который будет содержать: генерацию случайного слова с помощью функции get_word(), а затем последующий
# вызов функции play().
# Организуйте повторный запуск игры, если пользователь пожелает играть еще раз.


    while not guessed and tries > 0:
        guess = input('Введи літеру або слово англійською: ').upper()
        if not guess.isalpha():
            print('Введи тільки букви!')
            continue

        if guess in guessed_letters or guess in guessed_words:
            print('Ти вже пробував це.')
            continue

        if len(guess) == 1:
            if guess in word:
                guessed_letters.append(guess)
                word_completion = ''.join([letter if letter in guessed_letters else '_' for letter in word])
                print('Вгадав літеру!\n', word_completion)
            else:
                tries -= 1
                guessed_letters.append(guess)
                print(f'Не вгадав. Залишилось спроб: {tries}')
        else:
            if guess == word:
                guessed = True
                word_completion = word
            else:
                tries -= 1
                guessed_words.append(guess)
                print(f'Не вгадав слово. Залишилось спроб: {tries}')

        print(display_hangman(tries))
        print(word_completion)
        print()

        if '_' not in word_completion:
            guessed = True

    if guessed:
        print('Вітаю, ти вгадав слово!')
    else:
        print(f'Нажаль, ти програв. Загадане слово: {word}')

while True:
    word = get_word()
    play(word)
    repeat = input('Бажаєш спробувати ще раз? (так/ні): ').lower()
    if repeat != 'так':
        print('Приходь ще! До зустрічі!')
        break


